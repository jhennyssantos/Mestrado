%!PS-Adobe-2.0 EPSF-2.0
%%Title: bitrate.eps
%%Creator: gnuplot 5.0 patchlevel 7
%%CreationDate: Mon Nov 19 12:31:26 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Base ISO8859-1 character encoding plus support macros for UTF-8 encoding
% via the glyphshow operator
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def

/Gshow { dup type /stringtype eq { show } { glyphshow } ifelse } def

/Gsall { {Gshow} forall } def
/Gwidth {
	dup currentpoint pop exch
	gsave 6 array currentmatrix nulldevice setmatrix Gsall currentpoint pop grestore sub
	} def
/GLshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GRshow {currentpoint stroke M dup Gwidth vshift R
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GCshow {currentpoint stroke M dup Gwidth 2 div vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Times reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (bitrate.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 7)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Nov 19 12:31:26 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.80 0.80 0.80 C 980 640 M
5859 0 V
stroke
LTb
LCb setrgbcolor
980 640 M
63 0 V
5796 0 R
-63 0 V
stroke
860 640 M
[ [(Times) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.80 0.80 0.80 C 980 2026 M
5859 0 V
stroke
LTb
LCb setrgbcolor
980 2026 M
63 0 V
5796 0 R
-63 0 V
stroke
860 2026 M
[ [(Times) 200.0 0.0 true true 0 ( 200)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.80 0.80 0.80 C 980 3413 M
5859 0 V
stroke
LTb
LCb setrgbcolor
980 3413 M
63 0 V
5796 0 R
-63 0 V
stroke
860 3413 M
[ [(Times) 200.0 0.0 true true 0 ( 400)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.80 0.80 0.80 C 980 4799 M
5859 0 V
stroke
LTb
LCb setrgbcolor
980 4799 M
63 0 V
5796 0 R
-63 0 V
stroke
860 4799 M
[ [(Times) 200.0 0.0 true true 0 ( 600)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.80 0.80 0.80 C 980 640 M
0 4159 V
stroke
LTb
LCb setrgbcolor
980 640 M
0 63 V
0 4096 R
0 -63 V
stroke
980 440 M
[ [(Times) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.80 0.80 0.80 C 1957 640 M
0 4159 V
stroke
LTb
LCb setrgbcolor
1957 640 M
0 63 V
0 4096 R
0 -63 V
stroke
1957 440 M
[ [(Times) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.80 0.80 0.80 C 2933 640 M
0 4159 V
stroke
LTb
LCb setrgbcolor
2933 640 M
0 63 V
0 4096 R
0 -63 V
stroke
2933 440 M
[ [(Times) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.80 0.80 0.80 C 3910 640 M
0 4159 V
stroke
LTb
LCb setrgbcolor
3910 640 M
0 63 V
0 4096 R
0 -63 V
stroke
3910 440 M
[ [(Times) 200.0 0.0 true true 0 ( 300)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.80 0.80 0.80 C 4886 640 M
0 4159 V
stroke
LTb
LCb setrgbcolor
4886 640 M
0 63 V
0 4096 R
0 -63 V
stroke
4886 440 M
[ [(Times) 200.0 0.0 true true 0 ( 400)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.80 0.80 0.80 C 5863 640 M
0 4159 V
stroke
LTb
LCb setrgbcolor
5863 640 M
0 63 V
0 4096 R
0 -63 V
stroke
5863 440 M
[ [(Times) 200.0 0.0 true true 0 ( 500)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
0.80 0.80 0.80 C 6839 640 M
0 4159 V
stroke
LTb
LCb setrgbcolor
6839 640 M
0 63 V
0 4096 R
0 -63 V
stroke
6839 440 M
[ [(Times) 200.0 0.0 true true 0 ( 600)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
980 4799 N
980 640 L
5859 0 V
0 4159 V
-5859 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
160 2719 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times) 200.0 0.0 true true 0 (Taxa de Bits \(kbps\))]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
3909 140 M
[ [(Times) 200.0 0.0 true true 0 (Tempo \(s\))]
] -66.7 MCshow
LTb
% Begin plot #1
2.000 UL
LTb
0.00 0.00 1.00 C 980 1875 M
10 -586 V
10 1537 V
9 -966 V
10 -244 V
10 561 V
10 -220 V
9 361 V
10 -35 V
10 -521 V
10 -87 V
9 301 V
10 -409 V
10 289 V
10 -480 V
9 -200 V
10 388 V
10 -40 V
10 101 V
10 471 V
9 -298 V
10 57 V
10 -296 V
10 -26 V
9 99 V
10 -376 V
10 553 V
10 -487 V
9 1304 V
10 -1258 V
10 -443 V
10 685 V
9 440 V
10 -471 V
10 -3 V
10 -184 V
10 68 V
9 92 V
10 428 V
10 -397 V
10 147 V
9 102 V
10 294 V
10 -691 V
10 -172 V
9 342 V
10 835 V
10 -397 V
10 299 V
9 -136 V
10 32 V
10 -861 V
10 306 V
10 -58 V
9 -552 V
10 638 V
10 571 V
10 -1059 V
9 200 V
10 811 V
10 -301 V
10 -488 V
9 462 V
10 172 V
10 -803 V
10 113 V
9 1243 V
10 -899 V
10 -83 V
10 -22 V
10 -194 V
9 695 V
10 78 V
10 -543 V
10 -241 V
9 -44 V
10 146 V
10 107 V
10 -19 V
9 71 V
10 959 V
10 -670 V
10 144 V
9 -163 V
10 -229 V
9 3074 V
2 0 R
9 -3832 V
10 693 V
9 530 V
10 -783 V
10 -196 V
10 483 V
9 -643 V
10 343 V
10 462 V
10 -413 V
9 581 V
10 91 V
10 -250 V
10 -91 V
10 124 V
9 -513 V
10 466 V
10 -32 V
stroke 1986 1819 M
10 32 V
9 -268 V
10 -114 V
10 573 V
10 -378 V
9 -85 V
10 871 V
10 -790 V
10 -67 V
9 381 V
10 -448 V
10 3 V
10 778 V
10 -366 V
9 -194 V
10 749 V
10 -204 V
10 -33 V
9 213 V
10 -1132 V
10 1176 V
10 -485 V
9 55 V
10 -419 V
10 -110 V
10 486 V
9 -542 V
10 -142 V
10 3040 V
10 -2781 V
10 711 V
9 -402 V
10 -725 V
10 267 V
10 -64 V
9 508 V
10 -191 V
10 479 V
10 -357 V
9 1201 V
10 -1476 V
10 86 V
10 554 V
9 -360 V
10 -243 V
10 -608 V
10 323 V
10 -165 V
9 733 V
10 -617 V
10 -7 V
10 257 V
9 233 V
10 -177 V
10 165 V
10 -432 V
9 -150 V
10 1698 V
10 -936 V
10 -362 V
9 -27 V
10 616 V
10 -97 V
10 -1019 V
10 447 V
9 -155 V
10 444 V
10 -347 V
10 -328 V
9 1305 V
10 -521 V
10 -383 V
10 520 V
9 -442 V
10 -376 V
10 955 V
10 -748 V
9 641 V
10 1003 V
10 -887 V
10 -504 V
10 230 V
9 -494 V
10 1448 V
10 827 V
10 -2084 V
9 342 V
10 -286 V
10 1144 V
10 -1519 V
9 643 V
10 -243 V
10 -25 V
10 30 V
9 50 V
10 442 V
10 -208 V
10 -871 V
10 877 V
9 -621 V
10 398 V
10 127 V
10 -95 V
9 -250 V
stroke 3001 1520 M
10 68 V
10 -12 V
10 -31 V
9 64 V
10 242 V
10 778 V
10 -999 V
9 169 V
10 629 V
10 -1235 V
10 404 V
10 -167 V
9 137 V
10 216 V
10 138 V
10 -566 V
9 683 V
10 -346 V
10 -499 V
10 612 V
9 -94 V
10 -147 V
10 573 V
10 -547 V
9 145 V
10 152 V
10 -426 V
10 261 V
10 271 V
9 19 V
10 -555 V
10 678 V
10 471 V
9 -448 V
10 -327 V
10 -631 V
10 885 V
9 -930 V
10 519 V
10 585 V
10 -308 V
9 -593 V
10 333 V
10 478 V
10 -490 V
10 -234 V
9 1278 V
10 -1231 V
10 189 V
10 -482 V
9 393 V
10 -159 V
10 829 V
10 186 V
9 -592 V
10 -61 V
10 -262 V
10 -26 V
9 121 V
10 463 V
10 -185 V
10 -331 V
10 676 V
9 -168 V
10 -693 V
10 4 V
10 606 V
9 636 V
10 -1567 V
10 641 V
10 775 V
9 -1080 V
10 58 V
10 1059 V
10 -1228 V
9 293 V
10 604 V
10 -452 V
10 1081 V
10 -341 V
9 -405 V
10 -561 V
10 1245 V
10 -1040 V
9 -108 V
10 -816 V
10 1047 V
10 -191 V
9 273 V
10 -231 V
10 -433 V
10 -137 V
10 110 V
9 192 V
10 324 V
10 -458 V
10 2919 V
9 -2407 V
10 148 V
10 -342 V
10 169 V
9 -704 V
10 816 V
10 -195 V
stroke 4017 1694 M
10 -158 V
9 689 V
10 -533 V
10 -449 V
10 112 V
10 -3 V
9 627 V
10 -249 V
10 -257 V
10 56 V
9 -268 V
10 384 V
10 -51 V
10 13 V
9 -136 V
10 438 V
10 484 V
10 -369 V
9 -485 V
10 -221 V
10 -302 V
10 1122 V
10 66 V
9 -693 V
10 406 V
10 -625 V
10 571 V
9 -461 V
10 146 V
10 -305 V
10 881 V
9 -382 V
10 274 V
10 66 V
10 -127 V
9 -316 V
10 550 V
10 -751 V
10 573 V
10 292 V
9 -791 V
10 -195 V
10 709 V
10 363 V
9 -1112 V
10 282 V
10 79 V
10 837 V
9 -696 V
10 -558 V
10 203 V
10 38 V
9 337 V
10 -469 V
10 -80 V
10 34 V
10 123 V
9 1253 V
10 -1193 V
10 1110 V
10 -745 V
9 2408 V
10 -2091 V
10 -980 V
10 1243 V
9 -462 V
10 -584 V
10 -201 V
10 421 V
9 1144 V
10 -942 V
10 -446 V
10 606 V
10 468 V
9 -1100 V
10 -114 V
10 1301 V
10 -100 V
9 -295 V
10 332 V
10 555 V
10 -1018 V
9 115 V
10 -776 V
10 415 V
10 988 V
9 397 V
10 -1156 V
10 221 V
10 706 V
10 -569 V
9 -810 V
10 856 V
10 -1075 V
10 158 V
9 918 V
10 -1327 V
10 1265 V
10 418 V
9 -936 V
10 619 V
10 756 V
10 -1871 V
9 718 V
stroke 5032 2007 M
10 -558 V
10 -191 V
10 151 V
10 111 V
9 5 V
10 87 V
10 255 V
10 65 V
9 -287 V
10 54 V
10 -98 V
10 146 V
9 -1 V
10 226 V
10 -83 V
10 1000 V
9 -912 V
10 -531 V
10 153 V
10 -164 V
10 525 V
9 152 V
10 -828 V
10 576 V
10 -296 V
9 372 V
10 -570 V
10 721 V
10 -49 V
9 -237 V
10 218 V
10 -67 V
10 43 V
9 -5 V
10 -556 V
10 -247 V
10 770 V
10 257 V
9 -473 V
10 -37 V
10 719 V
10 -654 V
9 -618 V
10 450 V
10 66 V
10 -571 V
9 462 V
10 609 V
10 -844 V
10 2 V
9 290 V
10 827 V
10 -103 V
10 -312 V
10 -151 V
9 -151 V
10 -498 V
10 -109 V
10 1155 V
9 -369 V
10 -37 V
10 -627 V
10 403 V
9 642 V
10 -933 V
10 411 V
10 -411 V
9 68 V
10 462 V
10 -427 V
10 216 V
10 -740 V
9 1023 V
10 -963 V
10 658 V
10 -157 V
9 625 V
10 -385 V
10 -821 V
10 1541 V
9 -1112 V
10 -149 V
10 83 V
10 195 V
10 419 V
9 779 V
10 -985 V
10 -690 V
10 134 V
9 221 V
10 862 V
10 -485 V
10 649 V
9 1245 V
10 -1659 V
10 -325 V
10 51 V
9 691 V
10 -788 V
10 -450 V
10 1100 V
10 -438 V
9 -143 V
10 229 V
stroke 6048 1886 M
10 397 V
10 -1100 V
9 1127 V
10 -573 V
10 624 V
10 -468 V
9 -732 V
10 102 V
10 -72 V
10 -107 V
9 1380 V
10 13 V
10 324 V
10 -1291 V
10 70 V
9 -165 V
10 167 V
10 515 V
10 -200 V
9 -118 V
10 181 V
6263 883 L
10 946 V
9 1364 V
10 -2191 V
10 572 V
10 332 V
9 613 V
10 -367 V
10 -27 V
10 -294 V
10 266 V
9 -474 V
10 -351 V
10 925 V
10 -857 V
9 678 V
10 -213 V
10 8 V
10 -152 V
9 261 V
10 -265 V
10 -322 V
10 321 V
9 -131 V
10 424 V
10 -366 V
10 135 V
10 -113 V
9 -287 V
10 -49 V
10 254 V
10 427 V
9 -507 V
10 -38 V
10 618 V
10 -468 V
9 48 V
10 -410 V
10 652 V
10 -372 V
9 212 V
10 21 V
10 191 V
10 -554 V
10 448 V
9 -331 V
10 767 V
10 -594 V
10 226 V
9 -80 V
10 99 V
10 -454 V
10 534 V
9 -180 V
10 279 V
10 -467 V
10 171 V
9 -438 V
10 -172 V
10 -469 V
% End plot #1
stroke
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
980 4799 N
980 640 L
5859 0 V
0 4159 V
-5859 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
